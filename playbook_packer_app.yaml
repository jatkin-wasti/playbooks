# This is going to be our playbook to provision the environment to run the app

# Your YAML file starts after three dashes (---)

---
# This targets app_server

- hosts: default
# used to define where this playbook will run

  gather_facts: yes
# gathers facts/state of machine before running the playbook
  become: true
# become is used as the root permissions to perform tasks
  vars:
    db_ip:
      DB_HOST: 172.31.47.165
  environment: "{{ db_ip }}"

  tasks:
    - name: Syncing /app directory
      synchronize:
        src: /home/ubuntu/app
        dest: /home/ubuntu/

    - name: Update apt-get repo and cache
      apt: update_cache=yes force_apt_get=yes cache_valid_time=3600

    - name: Install git
      apt:
        name: git
        state: present
        update_cache: yes

    - name: add nodejs apt key
      apt_key:
        url: https://deb.nodesource.com/gpgkey/nodesource.gpg.key
        state: present

    - name: add nodejs repository
      apt_repository:
        repo: deb https://deb.nodesource.com/node_12.x {{ ansible_lsb.codename }} main
        state: present
        update_cache: yes

    - name: Install nodejs
      apt:
        name: nodejs
        state: present
        update_cache: yes

    - name: set up DB_HOST variable
      become: yes
      become_user: ubuntu
      shell: |
          echo "export DB_HOST=$DB_HOST" >> .bashrc
      args:
        chdir: /home/ubuntu

    - name: Install pm2
      npm:
        name: pm2
        global: yes

    - name: Installs nginx web server 
      apt: pkg=nginx state=present update_cache=true

    - name: remove nginx default file from sites enabled
      file:
        path: /etc/nginx/sites-enabled/default
        state: absent

    - name: remove nginx default file from sites available
      file:
        path: /etc/nginx/sites-available/default
        state: absent

    - name: creating a file in sites available
      file:
        path: /etc/nginx/sites-available/default.conf
        state: touch
        mode: 666

    - name: writing nginx config file
      blockinfile:
        path: /etc/nginx/sites-available/default.conf
        block: |
          server {
            listen 80;
            server_name development.local;
            location / {
                 proxy_pass http://127.0.0.1:3000;
            }
          }

    - name: create symbolic link between sites enabled and available
      file:
        src: /etc/nginx/sites-available/default.conf
        dest: /etc/nginx/sites-enabled/default.conf
        state: link

    - name: start and enable nginx
      service:
        name: nginx
        state: started
        enabled: yes

    - name: Execute a command using the shell module
      become: yes
      become_user: root
      shell: pm2 start app.js -f
      args:
        chdir: /home/ubuntu/app

